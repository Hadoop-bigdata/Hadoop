1 Install Docker

	1.1 Download Docker 
  	For Mac: https://www.docker.com/docker-mac
  	For Windows: https://www.docker.com/docker-windows
	
	1.2 Install Docker on the local machine

	1.3 Install Hadoop Image
  	After install Hadoop on the local machine, you need to open the terminal (for mac) or command line (for Windows)
 	pull Hadoop image into Docker 
  
 	$docker pull kiwenlau/hadoop:1.0

	1.4 Create clone storage
	
	$git clone https://github.com/kiwenlau/hadoop-cluster-docker
	
	For the Mac users, if you meet the error
	
	You can try:
	$xcode-select –install
	It will download the xcode for your computer to set up the environment.
	
	After try download the xcode, then tyep the same code:
	$git clone https://github.com/kiwenlau/hadoop-cluster-docker
 
	1.5 Connect the Internet

	$docker network create --driver=bridge Hadoop
 
	1.6 Running the Master Container

	$cd hadoop-cluster-docker
	$./start-container.sh
 
	When you type the command, you are in the Linux system, which located in Docker container xxxx
	Also xxx is in the master container
	
	1.7 Run the Hadoop in Docker
	
	#./start-hadoop.sh
	
	//command to run the Hadoop in the container
 
	1.8 Stop the Hadoop in Docker
	
	#stop-all.sh
	
	//command to stop the Hadoop in the container,
	
2 HDFS management
Hadoop Filesystem has its own web for user to manage their file. In order to take the benefit of web management.
We will set up this environment in step 2.

	2.1 Update apt-get
	Due to the Hadoop image is out of date, we need to do some update before setting up the environment.
	
	#apt-get update
 	//command to update the apt-get
	
	2.2 Install vim
	Vim is the editor for Linux System. 
	In the project, we need vim to edit the codes.
	
	#apt-get install vim
	//command install vim
 
	2.3 Set up Web HDFS management environment
	vi is the command for Linux system to create new file to edit the code
	
	#cd /usr/local/hadoop/etc/hadoop/
 	//command to change directory
	#vi core-site.xml
	#command to open the xml file
	‘’’
	type i to insert the command
	add the command at the bottom of the core-site.xml file
	type command : and the type wq save the file and quit the vim file.
	‘’’
	
	<?xml version="1.0"?>
	<configuration>
    		<property>
        		<name>fs.defaultFS</name>
        		<value>hdfs://hadoop-master:9000/</value>
    		</property>
	</configuration>

	2.4 Restart Hadoop
	Before Restart the Hadoop, make sure you already close Hadoop, to close the Hadoop follow step in 1.8.
	
	#./start-hadoop.sh
	After restart Hadoop, you can connect browser which belongs to HDFS.
	Open the Browser http://localhost:50070/
	It will login to the Hadoop page

3. Download Test Data
Before doing any steps list belowed, make sure we are in the master container in Docker.

	3.1 Download the Data File from Internet

        #cd ~                   
        //command go back to the home directory
        #mkdir test             
        //command create new directory name test
        #cd test                
        //command open the test directory                
        #wget http://content.udacity-data.com/courses/ud617/purchases.txt.gz    
        //commanddownload the file from Internet
 
	3.2 Extract the Data File

        #gzip –d purchases.txt.gz
        //command extract the file
 
	3.3 Test the Data File
        
        #head -10 purchases.txt
        //command display the first 10 lines in file

4 Edit the Mapper Function and Reducer Function

	4.1 Edit Mapper Function
	
	#vi mapper.py
	//command to open the mapper file
	
	copy the code in the mapper file from github to local machine
 	‘’’
	type i to insert the command
	add the command at the bottom of the core-site.xml file
	type command : wq save the file and quit the vim file.
	‘’’
	
	4.2 Edit Reducer Function
	#vi mapper.py
	//command to open the mapper file
	
	copy the code in the mapper file from github to local machine
	‘’’
	type i to insert the command
	add the command at the bottom of the core-site.xml file
	type command : wq save the file and quit the vim file.
	‘’’

	4.3 Give the permission to running the python file
	
	#chmod u+x mapper.py reducer.py
	//command give the permission to running the file 
	#ls
 	//display the file 
	If the file has permission to run, it should be in green color
	4.4 Test the code in Master ContainerLinux
	
	#head -50 purchases.txt | ./mapper.py | sort | ./reducer.py
	//command show the first 50 element in file and use mapper and reducer to get the result

5 Running Mapper Reducer in Hadoop
Before doing any steps list below, make sure you are in the master container.

	cd ~
	#command go back home directory
	cd test
	#command open the test directory
	
	5.1 Upload the test file to Hadoop
	
	'hadoop fs -' is the basic command for Hadoop system
	
	#hadoop fs -mkdir test
	//command create test directory in hadoop system 
	
	#hadoop fs -cp purchases.txt test/purchases
	//command copy the file to 
 
	5.2 Upload the mapper and reducer to Hadoop
	
	#cd ~/test
	#hadoop jar /usr/local/hadoop/share/hadoop/tools/lib/hadoop-streaming-2.7.2.jar -mapper mapper.py -reducer reducer.py -file mapper.py -file reducer.py -input input/purchases.txt -output outputtest
	//command to do MapReduce in hadoop
	
	5.3 Check the result
	
	#hadoop fs -ls
	//command to display directory in Hadoop system
	#hadoop fs -ls outputtest
	//command to display outputtest directory in Hadoop system
	#hadoop fs -cat outputtest/part-00000
	//command to check result for MapReduce
	
